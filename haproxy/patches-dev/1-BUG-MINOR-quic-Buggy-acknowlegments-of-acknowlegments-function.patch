From 00f448693a0af73b10f21bfb4f69c70cc96f2129 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Fr=C3=A9d=C3=A9ric=20L=C3=A9caille?= <flecaille@haproxy.com>
Date: Tue, 2 May 2023 08:57:37 +0200
Subject: [PATCH] BUG/MINOR: quic: Buggy acknowlegments of acknowlegments
 function

qc_treat_ack_of_ack() must remove ranges of acknowlegments from an ebtree which
have been acknowledged. This is done keeping track of the largest acknowledged
packet number which has been acknowledged and sent with an ack-eliciting packet.
But due to the data structure of the acknowledgement ranges used to build an ACK frame,
one must leave at least one range in such an ebtree which must at least contain
a unique one-element range with the largest acknowledged packet number as element.

This issue was revealed by @Tristan971 in GH #2140.

Must be backported in 2.7 and 2.6.
---
 src/quic_conn.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/quic_conn.c b/src/quic_conn.c
index 33ac15170..72afa32ed 100644
--- a/src/quic_conn.c
+++ b/src/quic_conn.c
@@ -2056,6 +2056,9 @@ static void qc_treat_ack_of_ack(struct quic_conn *qc,
 			break;
 		}
 
+		if (arngs->sz == 1)
+			break;
+
 		eb64_delete(ar);
 		pool_free(pool_head_quic_arng, ar_node);
 		arngs->sz--;
