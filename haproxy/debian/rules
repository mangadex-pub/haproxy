#!/usr/bin/make -f

DEP_DIST_ROOT_DATAPLANEAPI = $(shell realpath ../../deps/dataplaneapi/dist)
DEP_DIST_ROOT_LUA = $(shell realpath ../../deps/lua/dist)
DEP_DIST_ROOT_PCRE2 = $(shell realpath ../../deps/pcre2/dist)
DEP_DIST_ROOT_QUICTLS = $(shell realpath ../../deps/quictls/dist)

BUILD_VERSION_REPOSHA = $(shell git rev-parse --short HEAD)

DEBUG_CFLAGS = -ggdb3 -gdwarf-4

MAKEARGS = DEBUG="-DDEBUG_MEMORY_POOLS -DDEBUG_STRICT" \
           DEBUG_CFLAGS="$(DEBUG_CFLAGS)" \
           DEFINE="-DMAX_SESS_STKCTR=5" \
           IGNOREGIT=true \
           ADDLIB="-Wl,-rpath,/opt/quictls/lib" \
           TARGET="linux-glibc" \
           EXTRAVERSION="+mangadex-$(BUILD_VERSION_REPOSHA)" \
           VERDATE="$(shell date -u -I'minutes')" \
           USE_LIBCRYPT=1 \
           USE_LUA=1 \
           LUA_INC="$(DEP_DIST_ROOT_LUA)/include" \
           LUA_LIB="$(DEP_DIST_ROOT_LUA)/lib" \
           LUA_LIB_NAME="lua" \
           USE_NS=1 \
           USE_OPENSSL=1 \
           SSL_INC="$(DEP_DIST_ROOT_QUICTLS)/opt/quictls/include" \
           SSL_LIB="$(DEP_DIST_ROOT_QUICTLS)/opt/quictls/lib" \
           USE_PCRE2=1 \
           USE_PCRE2_JIT=1 \
           USE_STATIC_PCRE2=1 \
           PCRE2_INC="$(DEP_DIST_ROOT_PCRE2)/include" \
           PCRE2_LIB="$(DEP_DIST_ROOT_PCRE2)/lib64" \
           PCRE2_CONFIG="$(DEP_DIST_ROOT_PCRE2)/bin/pcre2-config" \
           USE_PROMEX=1 \
           USE_QUIC=1 \
           USE_SLZ=1 \
           USE_TFO=1 \
           USE_SYSTEMD=1

HAPROXY_LIBASAN = false
ifeq ($(HAPROXY_LIBASAN),true)
	DEBUG_CFLAGS += -static-libsan
	DEBUG_CFLAGS += -fsanitize=address
	DEBUG_CFLAGS += -fno-omit-frame-pointer
	MAKEARGS += LDFLAGS="-fsanitize=address"
endif

# Extra flags necessary for debian packaging
MAKEARGS += DESTDIR=debian/haproxy
MAKEARGS += PREFIX=/usr
MAKEARGS += IGNOREGIT=true
MAKEARGS += MANDIR=/usr/share/man
MAKEARGS += DOCDIR=/usr/share/doc/haproxy

%:
	dh $@

override_dh_auto_configure:

override_dh_auto_build-arch:
	$(info Enabling address sanitizer: $(HAPROXY_LIBASAN))
	$(MAKE) -j $(shell nproc) $(MAKEARGS)
	if [ -d "dev/haring" ]; then $(MAKE) -j $(shell nproc) dev/haring/haring; fi
	$(MAKE) -j $(shell nproc) -C admin/systemd $(MAKEARGS)

override_dh_auto_clean:
	$(MAKE) -j $(shell nproc) -C admin/systemd clean
	dh_auto_clean

override_dh_auto_install-arch:
	cp -rf $(DEP_DIST_ROOT_QUICTLS)/opt debian/haproxy/opt
	cp -rf $(DEP_DIST_ROOT_DATAPLANEAPI)/usr debian/haproxy/usr
	$(MAKE) -j $(shell nproc) $(MAKEARGS) install
	if [ -f "dev/haring/haring" ]; then install -m 0755 -D dev/haring/haring debian/haproxy/usr/sbin/haring; fi
	install -m 0644 -D debian/rsyslog.conf debian/haproxy/etc/rsyslog.d/49-haproxy.conf
	install -m 0644 -D debian/logrotate.conf debian/haproxy/etc/logrotate.d/haproxy
	ls -1 debian/haproxy

override_dh_auto_install-indep:

override_dh_installdocs:
	dh_installdocs -Xsystemd/

override_dh_installexamples:
	dh_installexamples -X build.cfg

override_dh_installinit:
	dh_installinit --no-restart-after-upgrade --no-stop-on-upgrade

override_dh_installsystemd:
	dh_installsystemd --no-restart-after-upgrade --no-stop-on-upgrade

override_dh_strip:
	dh_strip --dbgsym-migration="haproxy-dbg"

# see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=933541, still not shipped in buster
# and don't want to update to bullseye because of GCC version diff with Ubuntu 20.04... *sigh*
override_dh_dwz:
	dh_dwz \
	  --no-dwz-multifile \
	  --exclude="dataplaneapi" \
	  --exclude="haring" \
	  --exclude="openssl"
